---
- name: Deploy Docker container from ECR
  hosts: all
  remote_user: ec2-user
  become: yes
  vars:
    aws_region: "ap-south-1"
    ecr_registry: "065642457853.dkr.ecr.ap-south-1.amazonaws.com"
    ecr_image_name: "noteflix"
    ecr_image_tag: "8d315bb4687824af3885686e0b19227d2b128eba"
    docker_container_name: "noteflix"
    docker_port_mapping: "3000:3000"

  tasks:
    - name: Configure AWS credentials using aws configure
      shell: "aws configure set aws_access_key_id {{ lookup('env', 'AWS_ACCESS_KEY_ID') }} && aws configure set aws_secret_access_key {{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }} && aws configure set region {{ aws_region }}"
      changed_when: false

    - name: Log in to AWS ECR
      shell: "aws ecr get-login-password --region {{ aws_region }}"
      register: ecr_login
      changed_when: false

    - name: Install aptitude
      yum:
        name: aptitude
        state: latest

    - name: Install required system packages
      yum:
        name:
          - yum-utils
          - device-mapper-persistent-data
          - lvm2
          - python3-pip
          - python3-setuptools
        state: latest

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Install Docker on CentOS
      yum:
        name: docker-ce
        state: present
      when: ansible_os_family == 'RedHat'

    - name: Install Docker Module for Python
      pip:
        name: docker

    - name: Authenticate Docker with AWS ECR
      docker_login:
        registry_url: "{{ ecr_registry }}"
        username: AWS
        password: "{{ ecr_login.stdout }}"

    - name: Pull Docker image from AWS ECR
      docker_image:
        name: "{{ ecr_registry }}/{{ ecr_image_name }}:{{ ecr_image_tag }}"
        source: pull

    - name: Run Docker container
      docker_container:
        name: "{{ docker_container_name }}"
        image: "{{ ecr_registry }}/{{ ecr_image_name }}:{{ ecr_image_tag }}"
        state: started
        ports:
          - "{{ docker_port_mapping }}"
